/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.kpack.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kpack.models.V1alpha2ImageSpecBuildEnv;
import io.kpack.models.V1alpha2ImageSpecBuildServices;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1alpha2ImageSpecBuild
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
		date = "2023-03-27T06:32:24.214Z[Etc/UTC]")
public class V1alpha2ImageSpecBuild {

	public static final String SERIALIZED_NAME_ENV = "env";

	@SerializedName(SERIALIZED_NAME_ENV)
	private List<V1alpha2ImageSpecBuildEnv> env = null;

	public static final String SERIALIZED_NAME_RESOURCES = "resources";

	@SerializedName(SERIALIZED_NAME_RESOURCES)
	private Object resources;

	public static final String SERIALIZED_NAME_SERVICES = "services";

	@SerializedName(SERIALIZED_NAME_SERVICES)
	private List<V1alpha2ImageSpecBuildServices> services = null;

	public V1alpha2ImageSpecBuild env(List<V1alpha2ImageSpecBuildEnv> env) {

		this.env = env;
		return this;
	}

	public V1alpha2ImageSpecBuild addEnvItem(V1alpha2ImageSpecBuildEnv envItem) {
		if (this.env == null) {
			this.env = new ArrayList<>();
		}
		this.env.add(envItem);
		return this;
	}

	/**
	 * Get env
	 * @return env
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public List<V1alpha2ImageSpecBuildEnv> getEnv() {
		return env;
	}

	public void setEnv(List<V1alpha2ImageSpecBuildEnv> env) {
		this.env = env;
	}

	public V1alpha2ImageSpecBuild resources(Object resources) {

		this.resources = resources;
		return this;
	}

	/**
	 * Get resources
	 * @return resources
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public Object getResources() {
		return resources;
	}

	public void setResources(Object resources) {
		this.resources = resources;
	}

	public V1alpha2ImageSpecBuild services(List<V1alpha2ImageSpecBuildServices> services) {

		this.services = services;
		return this;
	}

	public V1alpha2ImageSpecBuild addServicesItem(V1alpha2ImageSpecBuildServices servicesItem) {
		if (this.services == null) {
			this.services = new ArrayList<>();
		}
		this.services.add(servicesItem);
		return this;
	}

	/**
	 * Get services
	 * @return services
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public List<V1alpha2ImageSpecBuildServices> getServices() {
		return services;
	}

	public void setServices(List<V1alpha2ImageSpecBuildServices> services) {
		this.services = services;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		V1alpha2ImageSpecBuild v1alpha2ImageSpecBuild = (V1alpha2ImageSpecBuild) o;
		return Objects.equals(this.env, v1alpha2ImageSpecBuild.env)
				&& Objects.equals(this.resources, v1alpha2ImageSpecBuild.resources)
				&& Objects.equals(this.services, v1alpha2ImageSpecBuild.services);
	}

	@Override
	public int hashCode() {
		return Objects.hash(env, resources, services);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class V1alpha2ImageSpecBuild {\n");
		sb.append("    env: ").append(toIndentedString(env)).append("\n");
		sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
		sb.append("    services: ").append(toIndentedString(services)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the
	 * first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
